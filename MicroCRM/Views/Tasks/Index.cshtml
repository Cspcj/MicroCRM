@model IEnumerable<MicroCRM.Models.TaskModel>
@using MicroCRM.Service;
@inject IProjectsService _projectsService;
@using MicroCRM.Models;
@using Microsoft.AspNetCore.Identity;
@inject UserManager<IdentityUser> UserManager;

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@foreach (var item in Model)
{

    <div class="p-1">
        <div class="card">
            <table>
                <tbody>
                    <tr>
                        @{
                            var Project = await _projectsService.GetProjectByIdAsync(item.ProjectId);
                            string ProjectName = (Project != null) ? Project.ProjectName : " - ";
                            var date = item.DueDate.ToShortDateString();
                        }
                        <td class="text-center col-sm-1"> @Html.DisplayFor(modelItem => item.IsCompleted)</td>
                        <td class="text-lg-left col-sm-7"> <h6> @Html.DisplayFor(modelItem => item.Text) </h6> Project: @ProjectName </td>
                        <td class="text-lg-right col-sm-1">
                            @Html.ActionLink((item.IsCompleted) ? "Uncheck" : "Check", "Toggle", "Tasks",new { id=item.TaskId})
                            @if (User.IsInRole("Manager") || User.IsInRole("Employee"))
                            {
                                @Html.ActionLink("Delete", "Delete", "Tasks",new { id=item.TaskId})
                            }
                        </td>
                        <td class="text-lg-right col-sm-1">
                            <h6>@date</h6>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    @*      <tr>
            <td>
                @Html.DisplayFor(modelItem => item.TaskId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Text)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProjectId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateCreated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DueDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsCompleted)
            </td>
            <td>
                @Html.ActionLink("Toggle status", "Edit", new {id=item.TaskId}) |
                    @Html.ActionLink("Delete", "Delete", new {id=item.TaskId})
            </td>
        </tr>*@
}
    </tbody>
</table>
